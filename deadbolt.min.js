/*
 Deadbolt Password Generator v2.0
 Copyright (c) 2009-2015 Ed Carter http://www.deadboltpasswordgenerator.com
 License: MIT
*/
var deadboltPasswordGenerator = function () { var e = this; return e.specialChars = '!"$%^&*()', e.numericChars = "0123456789", e.ucaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ", e.lcaseChars = "abcdefghijklmnopqrstuvwxyz", e.getNumericPasswordString = function (e, r, n) { for (var s = 0; e.length < n.passwordLength;) e += e; for (var a = 0; a < e.length; a += 1) { var t = e.charCodeAt(a), i = (t / r).toFixed(5), o = (i + "").split(".")[1], s = 1 * s + 1 * o; (s + "").length < n.passwordLength && (s = s + "" + a) } return s }, e.v1Encode = function (r, n, s) { for (var a = "", t = e.getNumericPasswordString(r, n, s), i = 0; i < s.passwordLength; i += 1) { var o, c = (t + "").substr(i, 5); o = s.useSpecial && i % 7 === 6 ? e.specialChars : i % 4 === 0 ? e.numericChars : i % 3 !== 0 ? e.lcaseChars : e.ucaseChars; var u = c % o.length; a += o.charAt(u) } return a }, e.v2Encode = function (r, n, s) { for (var a = "", t = e.getNumericPasswordString(r, n, s), i = (t + "").substring(5, 6), o = new Array, c = (t + "").split(""), u = (t + "").length, g = 0; u > g; g++) o.push(c[g]), (i + g) % 2 == 0 && o.push(c[u - g]); t = o.join(""); var h = t % 15, l = t % 7; h == l && (h += 2, h > s.passwordLength && (h = 0)); for (var g = 0; g < s.passwordLength; g += 1) { var d, p = (t + "").substr(g, 5); d = !s.useSpecial || g !== h && g !== l ? (i + g) % 4 === 0 ? e.numericChars : (i + g) % 3 !== 0 ? e.lcaseChars : e.ucaseChars : e.specialChars; var v = p % d.length; a += d.charAt(v) } return a }, e.engines = new Array({ id: 0, name: "English Breakfast (legacy)", process: function (r, n) { var s = n.pin + "669.669"; return e.v1Encode(r, s, n) } }, { id: 1, name: "Earl Grey", process: function (r, n) { var s = "6.69" + n.pin.split("").reverse().join(""); return e.v2Encode(r, s, n) } }, { id: 2, name: "Camomile", process: function (r, n) { var s = "66.9" + n.pin; return e.v2Encode(r, s, n) } }), e.getEngineById = function (r) { for (var n = 0; n < e.engines.length; n++) if (e.engines[n].id === r) return e.engines[n]; return null }, { getAvailableEngines: function () { return e.engines }, encodePassword: function (r, n) { if (r.length < 6) return ""; n.caseSensitive || (r = r.toLowerCase()); var s = n.engineId || 0, a = { pin: n.pin || "0000", useSpecial: void 0 === n.useSpecial ? !0 : n.useSpecial, passwordLength: n.passwordLength || 15 }, t = e.getEngineById(s); return t ? t.process(r, a) : "" } } }();